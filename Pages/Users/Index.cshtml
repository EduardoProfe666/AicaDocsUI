@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using AicaDocsUI.Extensions
@model Index

@{
    ViewData["Title"] = "Usuarios";
    var currentUrl = HttpContext.Request.Path;
    var previousPag = Model.PageNumber - 1;
    var nextPag = Model.PageNumber + 1;
    if (previousPag == 0)
        previousPag = Model.PageNumber;
    if (nextPag > Model.PageTotal)
        nextPag = Model.PageNumber;
    bool showCreated = Model.ShowCreated;
    bool showDeleted = Model.ShowDeleted;
    bool showUserExists = Model.ShowUserExists;
}

<h2 class="card-text md-5">Listado de Usuarios</h2>

<h4 class="card-text md-3">Criterios de Búsqueda</h4>

<form>
    <div class="row mb-4">
        <div class="col-md mb-1">
            <div class="form-floating">
                <select id="floatingSelectFormat" class=" form-select me-2" asp-for="Role" asp-items="Model.ListRoles">
                    <option selected>Seleccione un rol</option>
                </select>
                <label for="floatingSelectFormat">Roles</label>
            </div>
        </div>
        <div class="col-md mb-1">
            <div class="form-floating">
                <input id="floatingSelectDocument" type="text" class="form-control me-2" asp-for="FullName"/>
                <label for="floatingSelectDocument">Nombre</label>
            </div>
        </div>
        <div class="col-md mb-1">
            <div class="form-floating">
                <input id="floatingSelectUsername2" type="text" class="form-control me-2" asp-for="Email"/>
                <label for="floatingSelectUsername2">Correo</label>
            </div>
        </div>

    </div>


    <div class="row mb-4">
        <div class="col-md text-start">
            <a href="/Users/Register" class="btn btn-primary text-start">
                <i class="fas fa-plus"> Registrar Usuario</i>
            </a>
            <a href="@($"/downloadReport/{DownloadReportEndpoint.TypeReport.Users}/1/1")" class="btn btn-secondary text-start">
                <i class="fas fa-file-pdf"> Exportar</i>
            </a>
        </div>
        <div class="col-md text-end">
            <a href="/Documents" class="btn btn-outline-warning text-end">
                <i class="fas fa-recycle"> Resetear</i>
            </a>
            <button type="submit" class="btn btn-outline-primary">
                <i class="fas fa-search"> Buscar</i>
            </button>
        </div>
    </div>
</form>


<table class="table table-hover">
    <thead>
    <tr>
        <th>Nombre</th>
        <th>Email</th>
        <th>Confirmado</th>
        <th>Rol</th>
        <th>Acciones</th>

    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Users)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td class="mx-auto">
                @Html.DisplayFor(modelItem => item.IsConfirmed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>


            <td class="white-space:nowrap">
                <a class="btn btn-outline-danger btn-sm" asp-page-handler="Delete" asp-route-email="@item.Email">
                    <i class="fas fa-trash"></i>
                </a>
            </td>
        </tr>
    }

    </tbody>


</table>
<nav>
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="@(currentUrl)?PageNumber=@(previousPag)&FullName=@Model.FullName&Email=@Model.Email&Role=@Model.Role&SortBy=@Model.SortBy&SortOrder=@Model.SortOrder" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= Model.PageTotal; i++)
        {
            string activeClass = "";
            if (i == Model.PageNumber) activeClass = "active";
            <li class="page-item @activeClass" aria-current="@(i == Model.PageNumber ? "page" : "false")">
                <a class="page-link" href="@(currentUrl)?PageNumber=@(i)&FullName=@Model.FullName&Email=@Model.Email&Role=@Model.Role&SortBy=@Model.SortBy&SortOrder=@Model.SortOrder">@i</a>
            </li>
        }
        <li class="page-item">
            <a class="page-link" href="@(currentUrl)?PageNumber=@(previousPag)&@(nextPag)&FullName=@Model.FullName&Email=@Model.Email&Role=@Model.Role&SortBy=@Model.SortBy&SortOrder=@Model.SortOrder" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>

</nav>

<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index:  9999;">
    <!-- Primer toast -->
    <div id="liveToast1" class="toast bg-success" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-success">
            <strong class="me-auto text-light">Usuario creado con éxito</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <!-- Segundo toast -->
    <div id="liveToast2" class="toast bg-success" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-success">
            <strong class="me-auto text-light">Eliminado con éxito</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
    
    <!-- Tercer toast -->
        <div id="liveToast3" class="toast bg-danger" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger">
                <strong class="me-auto text-light">El usuario ya existe</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
</div>

<script>
    let shouldShowCreated = @(showCreated.ToString().ToLower());
    let shouldShowDeleted = @(showDeleted.ToString().ToLower());
    let shouldShowUserExists = @(showUserExists.ToString().ToLower());
        
    window.onload = (event) => {
        let liveToast1 = document.getElementById('liveToast1');
        let liveToast2 = document.getElementById('liveToast2');
        let liveToast3 = document.getElementById('liveToast3');

        let toastInstance1 = new bootstrap.Toast(liveToast1);
        let toastInstance2 = new bootstrap.Toast(liveToast2);
        let toastInstance3 = new bootstrap.Toast(liveToast3);

        if (shouldShowCreated)
            toastInstance1.show();
        if (shouldShowDeleted)
            toastInstance2.show();
        if (shouldShowUserExists)
            toastInstance3.show();
    };
</script>