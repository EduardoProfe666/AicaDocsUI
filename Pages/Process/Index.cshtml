@page
@model AicaDocsUI.Pages.Process.Index

@{
    ViewData["Title"] = "Proceso de documento";
    bool showCreated = Model.ShowCreated;
    bool showEdited = Model.ShowEdited;
}

<h2 class="card-text md-5">Listado de Procesos de documento</h2>

<div class="row mb-4">
    <div class="col">
        <a class="btn btn-outline-primary " href="/Process/Create">
            <i class="fas fa-plus"></i>
            Agregar Proceso
        </a>

    </div>
</div>

<table class="table table-hover">
    <thead>
    <tr>
        <th>Nombre</th>
        <th>Acción</th>

    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Nomenclators)
    {
        <tr>
            <td class="col-10">
                @Html.DisplayFor(modelItem => item.Name)
            </td>

            <td class="white-space:nowrap">
                <a class="btn btn-outline-warning btn-sm" asp-page="./Edit" asp-route-id="@item.Id" asp-route-typeOfNomenclator="@item.Type">
                    <i class="fas fa-edit"></i>
                </a>
            </td>
        </tr>
    }

    </tbody>


</table>

<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index:  9999;">
    <!-- Primer toast -->
    <div id="liveToast1" class="toast bg-success" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-success">
            <strong class="me-auto text-light">Proceso de documento creado con éxito</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>

    <!-- Segundo toast -->
    <div id="liveToast2" class="toast bg-success" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header bg-success">
            <strong class="me-auto text-light">Proceso de documento actualizado con éxito</strong>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

<script>
    let shouldShowCreated = @(showCreated.ToString().ToLower());
    let shouldShowEdited = @(showEdited.ToString().ToLower());
    
    window.onload = (event) => {
        let liveToast1 = document.getElementById('liveToast1');
        let liveToast2 = document.getElementById('liveToast2');

        let toastInstance1 = new bootstrap.Toast(liveToast1);
        let toastInstance2 = new bootstrap.Toast(liveToast2);

        if (shouldShowCreated)
            toastInstance1.show();
        if (shouldShowEdited)
            toastInstance2.show();
    };
</script>